TODO allgemein
- TODO ins Wiki überführen
- Doku Hardware-Guidelines (Gemeinsame Anforderungen an alle Module, bzw Modulgruppe oder eines Prozessortyps z.B. EEPRom Anschlüsse, verwendeter UART, RS485 select, etc)
- Verzeichn isstruktur


TODO OS
- clock_os in kwb_router (message_bus) einbauen.
- Äquivalent zu "setserial low_latency" in bus_phy_os einbauen.
- Konzept zum Schalten der Send_Enable Leitung .
- Zeitstempel von systime in kwbmonitor fehlerhaft??
- Unit-Tests reaktivieren

- Buffergrößen für Sende- und Empfangsbuffer trennen. OK
- printfs ausbauen und bus_transport.c einchecken OK


TODO AVR
- Firmware Upgrade Konzept ausarbeiten, inkl. Schreiben von internem EEProm und Fehlerbehandlungen.
- *.lst Files im Build-Ordner, nicht SRC Odner generieren
- Festlegung von festen Code-Bereichen pro Prozessortyp für Versionsnummern und String. Entsprechende appversion.c in alle Projekte einfügen.
- Abklären, was mit ucontroller.h passieren soll. Besser ohne und defines in pcbconfig.h? Vorteil-> Passt besser zu Unit-tests.
- Coding-Guidelines anwenden
- Konzept mit mehreren UARTs und SPIs implementieren. Erstmal für den Debug-UART



zu Verzeichnisstruktur)
wir wählen Variante 1.
- Verzeichnisstruktur sw Alternative 1:
  sw/avr                Applikationen für AVR µc
  sw/avr/bin
  sw/avr/build
  sw/avr/buildscripts
  sw/avr/doc
  sw/avr/include
  sw/avr/shared         Gemeinsame Sourcen für AVR µc
  sw/doc                Systemunabhängige, gemeinsame SW Dokumente
  sw/include            Systemunabhängige gemeinsam genutzte Header
  sw/os                 Applikationen und Libraries für Operating Systems (Windows/Linux/Mac)
  sw/os/bin
  sw/os/build
  sw/os/buildscripts
  sw/os/doc
  sw/os/include
  sw/os/shared
  sw/os/<kwbapps>
  sw/shared             Systemunabhängige gemeinsam genutzte Sourcen
 
 
- Verzeichnisstruktur sw Alternative 2: (Favorit)
  sw/
  sw/bin/avr
  sw/bin/os
  sw/build/avr
  sw/build/os
  sw/buildscripts/avr
  sw/buildscripts/os
  sw/doc
  sw/doc/avr
  sw/doc/os
  sw/src/avr            Applikationen und Libraries für AVR µC
  sw/src/avr/<avrapps>  Applikation X
  sw/src/os             Applikationen und Libraries für Operating Systems (Windows/Linux/Mac)
  sw/src/os/<kwbapps>   Applikation X
  sw/src/include        Systemunabhängige gemeinsam genutzte Header
  sw/src/include/avr
  sw/src/include/os
  sw/src/shared         Gemeinsame Sourcen für AVR µc
  sw/src/shared/avr
  sw/src/shared/os
 
Variante 2b
  sw/src/avr            Applikationen und Libraries für AVR µC
  sw/src/avr/<avrapps>  Applikation X
  sw/src/avr/include    gemeinsam genutzte Header für AVR µC
  sw/src/avr/shared     gemeinsam genutzte Module für AVR µC
  sw/src/include        Systemunabhängige, gemeinsame Header
  sw/src/os             Applikationen und Libraries für Operating Systems (Windows/Linux/Mac)
  sw/src/os/<kwbapps>   Applikation X
  sw/src/os/include     gemeinsam genutzte Header für Operating Systems (Windows/Linux/Mac)
  sw/src/os/shared      gemeinsam genutzte Module für Operating Systems (Windows/Linux/Mac)
  sw/src/shared         Systemunabhängige, gemeinsame Module
 
 
